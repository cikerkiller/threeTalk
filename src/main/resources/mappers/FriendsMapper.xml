<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tt.dao.FriendsMapper" >
  <resultMap id="BaseResultMap" type="com.tt.pojo.Friends" >
    <constructor >
      <idArg column="id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="friend_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="friend_note" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, friend_id, status, friend_note, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from talk_friends
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from talk_friends
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tt.pojo.Friends" >
    insert into talk_friends (id, user_id, friend_id, 
      status, friend_note, create_time, 
      update_time)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{friendId,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{friendNote,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.tt.pojo.Friends" >
    insert into talk_friends
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="friendId != null" >
        friend_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="friendNote != null" >
        friend_note,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="friendId != null" >
        #{friendId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="friendNote != null" >
        #{friendNote,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tt.pojo.Friends" >
    update talk_friends
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="friendId != null" >
        friend_id = #{friendId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="friendNote != null" >
        friend_note = #{friendNote,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tt.pojo.Friends" >
    update talk_friends
    set user_id = #{userId,jdbcType=VARCHAR},
      friend_id = #{friendId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      friend_note = #{friendNote,jdbcType=VARCHAR},
      update_time = now()
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <select id="selectFriendsByUserId" parameterType="string" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from talk_friends
    where  status=1 and user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <select id="selectFriendsByUserIdAndFriendsId" parameterType="map" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />
    from talk_friends
    where  user_id = #{userId} and friend_id=#{friendId}
  </select>
  
</mapper>